#!/usr/bin/env bash

set -e
trap "echo $(date) Backup interrupted >&2; exit 2" INT TERM
cd $HOME


# Backup local location
BORG_REPO_NAME="$HOME/.backup"



# Directories and files to be backed up
if [ ! -z $XDG_CONFIG_HOME ]; then
    CONFIG_DIR="$XDG_CONFIG_HOME/backup"
else
    CONFIG_DIR="${HOME}/.config/backup"
fi

BORG_FILES=()
while read -r file; do
    BORG_FILES+=( "$file")
done <<< $(cat $CONFIG_DIR/backuprc | sed 's/[[:space:]]*$//')



# Backups name pattern
BORG_BACKUP_NAME="$(whoami)@$(hostname)-$(date +%F)"



# All rclone remote backends
RCLONE_BACKENDS="$(rclone config show | grep -E "^\[.+\]" | tr -d '[]')"



echo "=> Starting backup"
BORG_UNKNOWN_UNENCRYPTED_BORG_REPO_NAME_ACCESS_IS_OK=yes borg create --stats \
            --show-rc \
            --compression lz4 \
            ${BORG_REPO_NAME}::${BORG_BACKUP_NAME} "${BORG_FILES[@]}"
echo

echo "=> Pruning repository"
borg prune --prefix "$(whoami)@$(hostname)-" \
            --keep-weekly 3 \
            --keep-monthly 6 \
            "${BORG_REPO_NAME}"
echo

while read -r backend; do
    echo "=> Uploading to ${backend}"
    rclone sync ${BORG_REPO_NAME} "${backend}":backup/
    echo
done <<< "${RCLONE_BACKENDS}"

echo "Backup done."
